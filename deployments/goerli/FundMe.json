{
    "address": "0xFAe0717FC6373378033C0e081c22E497fB0a63b7",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MIN_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "transactionHash": "0x67a315e7c96fbf511beaa3b70dc57bbce1df28a9000a4f10e773eb94b5518801",
    "receipt": {
        "to": null,
        "from": "0x9eEC1A28669641B4985E1FB1535dFfa4b3527524",
        "contractAddress": "0xFAe0717FC6373378033C0e081c22E497fB0a63b7",
        "transactionIndex": 10,
        "gasUsed": "981990",
        "logsBloom": "0x
        "blockHash": "0x8e5bcd3f0756c6337b8e2c637b7fea94ab1c617cbb7f5f04bd255812368370b6",
        "transactionHash": "0x67a315e7c96fbf511beaa3b70dc57bbce1df28a9000a4f10e773eb94b5518801",
        "logs": [],
        "blockNumber": 7444399,
        "cumulativeGasUsed": "4316174",
        "status": 1,
        "byzantium": true
    },
    "args": ["0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"],
    "numDeployments": 4,
    "solcInputHash": "644bf8f4d33bfd4f897ef283fef5596f",
    "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Limbeh\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n * @author Limbeh\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n\\n    address private immutable i_owner;\\n    AggregatorV3Interface private immutable i_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(i_priceFeed) >= MIN_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool callSucess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSucess, \\\"Call failed!\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool callSucess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSucess, \\\"Call failed!\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return i_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xfdbec71ec69fc8cafece7498678ccb08afc8c055a06ac4266e3b92442efb1e8b\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    // Converts uint256 Wei to uint256 USD\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x97fa90b34ba4606bd25bb68f09c14dc0fd44bc65666bee412e7b4daedaec4f41\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60c06040523480156200001157600080fd5b5060405162001258380380620012588339818101604052810190620000379190620000c3565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000148565b600081519050620000bd816200012e565b92915050565b600060208284031215620000dc57620000db62000129565b5b6000620000ec84828501620000ac565b91505092915050565b6000620001028262000109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200013981620000f5565b81146200014557600080fd5b50565b60805160601c60a05160601c6110cf620001896000396000818161045b015261048e0152600081816101f10152818161043301526105a801526110cf6000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb2514610080578063213dbea2146100bd5780633ccfd60b146100e8578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a7d565b610199565b6040516100b49190610c73565b60405180910390f35b3480156100c957600080fd5b506100d26101e2565b6040516100df9190610c73565b60405180910390f35b6100f06101ef565b005b3480156100fe57600080fd5b5061010761042f565b6040516101149190610bfd565b60405180910390f35b34801561012957600080fd5b50610132610457565b60405161013f9190610c18565b60405180910390f35b61015061047f565b005b61015a6105a6565b005b34801561016857600080fd5b50610183600480360381019061017e9190610aaa565b61084a565b6040516101909190610bfd565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610274576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031f57600080828154811061029957610298610f85565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061031790610ede565b915050610277565b50600067ffffffffffffffff81111561033b5761033a610fb4565b5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b506000908051906020019061037f92919061096d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a690610be8565b60006040518083038185875af1925050503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b505090508061042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610c53565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6802b5e3af16b18800006104bc7f00000000000000000000000000000000000000000000000000000000000000003461089190919063ffffffff16565b10156104fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f490610c33565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ae57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610664575b5050505050905060005b81518110156107395760008282815181106106d6576106d5610f85565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073190610ede565b9150506106b8565b50600067ffffffffffffffff81111561075557610754610fb4565b5b6040519080825280602002602001820160405280156107835781602001602082028036833780820191505090505b506000908051906020019061079992919061096d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107c090610be8565b60006040518083038185875af1925050503d80600081146107fd576040519150601f19603f3d011682016040523d82523d6000602084013e610802565b606091505b5050905080610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90610c53565b60405180910390fd5b5050565b600080828154811061085f5761085e610f85565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061089d836108cd565b90506000670de0b6b3a764000085836108b69190610df2565b6108c09190610caa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190610ad7565b5050509150506402540be400816109659190610cdb565b915050919050565b8280548282559060005260206000209081019282156109e6579160200282015b828111156109e55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061098d565b5b5090506109f391906109f7565b5090565b5b80821115610a105760008160009055506001016109f8565b5090565b600081359050610a238161103d565b92915050565b600081519050610a3881611054565b92915050565b600081359050610a4d8161106b565b92915050565b600081519050610a628161106b565b92915050565b600081519050610a7781611082565b92915050565b600060208284031215610a9357610a92610fe3565b5b6000610aa184828501610a14565b91505092915050565b600060208284031215610ac057610abf610fe3565b5b6000610ace84828501610a3e565b91505092915050565b600080600080600060a08688031215610af357610af2610fe3565b5b6000610b0188828901610a68565b9550506020610b1288828901610a29565b9450506040610b2388828901610a53565b9350506060610b3488828901610a53565b9250506080610b4588828901610a68565b9150509295509295909350565b610b5b81610e4c565b82525050565b610b6a81610ea8565b82525050565b6000610b7d600083610c8e565b9150610b8882610fe8565b600082019050919050565b6000610ba0601383610c99565b9150610bab82610feb565b602082019050919050565b6000610bc3600c83610c99565b9150610bce82611014565b602082019050919050565b610be281610e88565b82525050565b6000610bf382610b70565b9150819050919050565b6000602082019050610c126000830184610b52565b92915050565b6000602082019050610c2d6000830184610b61565b92915050565b60006020820190508181036000830152610c4c81610b93565b9050919050565b60006020820190508181036000830152610c6c81610bb6565b9050919050565b6000602082019050610c886000830184610bd9565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cb582610e88565b9150610cc083610e88565b925082610cd057610ccf610f56565b5b828204905092915050565b6000610ce682610e5e565b9150610cf183610e5e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d3057610d2f610f27565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d6d57610d6c610f27565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610daa57610da9610f27565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610de757610de6610f27565b5b828202905092915050565b6000610dfd82610e88565b9150610e0883610e88565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4157610e40610f27565b5b828202905092915050565b6000610e5782610e68565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610eb382610eba565b9050919050565b6000610ec582610ecc565b9050919050565b6000610ed782610e68565b9050919050565b6000610ee982610e88565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f1c57610f1b610f27565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b61104681610e4c565b811461105157600080fd5b50565b61105d81610e5e565b811461106857600080fd5b50565b61107481610e88565b811461107f57600080fd5b50565b61108b81610e92565b811461109657600080fd5b5056fea26469706673582212200c17e862159c009017f358634d8b61d9c70064b0803b7834debd17b717834df064736f6c63430008070033",
    "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb2514610080578063213dbea2146100bd5780633ccfd60b146100e8578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a7d565b610199565b6040516100b49190610c73565b60405180910390f35b3480156100c957600080fd5b506100d26101e2565b6040516100df9190610c73565b60405180910390f35b6100f06101ef565b005b3480156100fe57600080fd5b5061010761042f565b6040516101149190610bfd565b60405180910390f35b34801561012957600080fd5b50610132610457565b60405161013f9190610c18565b60405180910390f35b61015061047f565b005b61015a6105a6565b005b34801561016857600080fd5b50610183600480360381019061017e9190610aaa565b61084a565b6040516101909190610bfd565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610274576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031f57600080828154811061029957610298610f85565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061031790610ede565b915050610277565b50600067ffffffffffffffff81111561033b5761033a610fb4565b5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b506000908051906020019061037f92919061096d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a690610be8565b60006040518083038185875af1925050503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b505090508061042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610c53565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6802b5e3af16b18800006104bc7f00000000000000000000000000000000000000000000000000000000000000003461089190919063ffffffff16565b10156104fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f490610c33565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ae57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610664575b5050505050905060005b81518110156107395760008282815181106106d6576106d5610f85565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073190610ede565b9150506106b8565b50600067ffffffffffffffff81111561075557610754610fb4565b5b6040519080825280602002602001820160405280156107835781602001602082028036833780820191505090505b506000908051906020019061079992919061096d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107c090610be8565b60006040518083038185875af1925050503d80600081146107fd576040519150601f19603f3d011682016040523d82523d6000602084013e610802565b606091505b5050905080610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90610c53565b60405180910390fd5b5050565b600080828154811061085f5761085e610f85565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061089d836108cd565b90506000670de0b6b3a764000085836108b69190610df2565b6108c09190610caa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190610ad7565b5050509150506402540be400816109659190610cdb565b915050919050565b8280548282559060005260206000209081019282156109e6579160200282015b828111156109e55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061098d565b5b5090506109f391906109f7565b5090565b5b80821115610a105760008160009055506001016109f8565b5090565b600081359050610a238161103d565b92915050565b600081519050610a3881611054565b92915050565b600081359050610a4d8161106b565b92915050565b600081519050610a628161106b565b92915050565b600081519050610a7781611082565b92915050565b600060208284031215610a9357610a92610fe3565b5b6000610aa184828501610a14565b91505092915050565b600060208284031215610ac057610abf610fe3565b5b6000610ace84828501610a3e565b91505092915050565b600080600080600060a08688031215610af357610af2610fe3565b5b6000610b0188828901610a68565b9550506020610b1288828901610a29565b9450506040610b2388828901610a53565b9350506060610b3488828901610a53565b9250506080610b4588828901610a68565b9150509295509295909350565b610b5b81610e4c565b82525050565b610b6a81610ea8565b82525050565b6000610b7d600083610c8e565b9150610b8882610fe8565b600082019050919050565b6000610ba0601383610c99565b9150610bab82610feb565b602082019050919050565b6000610bc3600c83610c99565b9150610bce82611014565b602082019050919050565b610be281610e88565b82525050565b6000610bf382610b70565b9150819050919050565b6000602082019050610c126000830184610b52565b92915050565b6000602082019050610c2d6000830184610b61565b92915050565b60006020820190508181036000830152610c4c81610b93565b9050919050565b60006020820190508181036000830152610c6c81610bb6565b9050919050565b6000602082019050610c886000830184610bd9565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cb582610e88565b9150610cc083610e88565b925082610cd057610ccf610f56565b5b828204905092915050565b6000610ce682610e5e565b9150610cf183610e5e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d3057610d2f610f27565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d6d57610d6c610f27565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610daa57610da9610f27565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610de757610de6610f27565b5b828202905092915050565b6000610dfd82610e88565b9150610e0883610e88565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4157610e40610f27565b5b828202905092915050565b6000610e5782610e68565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610eb382610eba565b9050919050565b6000610ec582610ecc565b9050919050565b6000610ed782610e68565b9050919050565b6000610ee982610e88565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f1c57610f1b610f27565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b61104681610e4c565b811461105157600080fd5b50565b61105d81610e5e565b811461106857600080fd5b50565b61107481610e88565b811461107f57600080fd5b50565b61108b81610e92565b811461109657600080fd5b5056fea26469706673582212200c17e862159c009017f358634d8b61d9c70064b0803b7834debd17b717834df064736f6c63430008070033",
    "devdoc": {
        "author": "Limbeh",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {},
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "This contract is to demo a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 58,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
